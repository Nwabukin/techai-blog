---
import MainLayout from './MainLayout.astro';
import type { CollectionEntry } from 'astro:content';
import TableOfContents from '../components/TableOfContents.astro';
import { calculateReadingTime } from '../utils/readingTime';

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { Content, headings } = await post.render();
const { title, description, pubDate, updatedDate, image, tableOfContents } = post.data;

// Calculate reading time using the raw content
const readingTime = calculateReadingTime(post.body);

const formattedPubDate = new Date(pubDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

const formattedUpdatedDate = updatedDate
  ? new Date(updatedDate).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    })
  : null;
---

<MainLayout title={title} description={description} image={image?.src}>
  <article class="max-w-4xl mx-auto px-4 py-12">
    <header class="mb-12 text-center">
      <h1 class="text-4xl font-bold text-secondary-900 dark:text-white mb-4">{title}</h1>
      <div
        class="flex items-center justify-center gap-4 text-secondary-600 dark:text-secondary-400"
      >
        <span>{formattedPubDate}</span>
        {
          formattedUpdatedDate && (
            <>
              <span>•</span>
              <span>Updated: {formattedUpdatedDate}</span>
            </>
          )
        }
        <span>•</span>
        <span>{readingTime}</span>
      </div>
    </header>

    {tableOfContents && <TableOfContents headings={headings} />}

    <div
      class="prose prose-lg dark:prose-invert mx-auto prose-headings:text-secondary-900 dark:prose-headings:text-white prose-a:text-primary-600 dark:prose-a:text-primary-400 prose-img:rounded-xl"
    >
      <Content />
    </div>
  </article>
</MainLayout>
