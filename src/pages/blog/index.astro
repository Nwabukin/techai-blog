---
import MainLayout from '../../layouts/MainLayout.astro';
import BlogCard from '../../components/BlogCard.astro';
import TagCloud from '../../components/TagCloud.astro';
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import InfiniteScroll from '../../components/InfiniteScroll.astro';

// Get all posts
const posts = await getCollection('blog', ({ data }) => !data.draft);
const allTags = [...new Set(posts.flatMap((post) => post.data.tags))];
const categories = [...new Set(posts.map((post) => post.data.category))];
const sortedPosts = posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Add pagination
const POSTS_PER_PAGE = 9;
const currentPage = 1;
const totalPages = Math.ceil(sortedPosts.length / POSTS_PER_PAGE);
const paginatedPosts = sortedPosts.slice(
  (currentPage - 1) * POSTS_PER_PAGE,
  currentPage * POSTS_PER_PAGE
);

// Add featured posts filter
const featuredPosts = sortedPosts.filter((post) => post.data.featured).slice(0, 3);

// Icons
const icons = {
  search: `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
    <path stroke-linecap="round" stroke-linejoin="round" d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z" />
  </svg>`,
  filter: `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
    <path stroke-linecap="round" stroke-linejoin="round" d="M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 0 1-.659 1.591l-5.432 5.432a2.25 2.25 0 0 0-.659 1.591v2.927a2.25 2.25 0 0 1-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 0 0-.659-1.591L3.659 7.409A2.25 2.25 0 0 1 3 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0 1 12 3Z" />
  </svg>`,
  rss: `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
    <path stroke-linecap="round" stroke-linejoin="round" d="M12.75 19.5v-.75a7.5 7.5 0 0 0-7.5-7.5H4.5m0-6.75h.75c7.87 0 14.25 6.38 14.25 14.25v.75M6 18.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z" />
  </svg>`,
  article: `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
    <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.042A8.967 8.967 0 0 0 6 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 0 1 6 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 0 1 6-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0 0 18 18a8.967 8.967 0 0 0-6 2.292m0-14.25v14.25" />
  </svg>`,
  calendar: `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
    <path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5" />
  </svg>`,
  clock: `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
    <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
  </svg>`,
};
---

<MainLayout
  title="Blog - Tech AI Blog"
  description="Explore our latest articles on technology and artificial intelligence"
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <!-- Hero Section -->
    <header class="text-center mb-16">
      <div
        class="inline-flex items-center justify-center gap-2 px-4 py-2 rounded-full bg-primary-50 dark:bg-primary-900/20 text-primary-600 dark:text-primary-400 mb-6"
      >
        <span set:html={icons.article} class="w-5 h-5" />
        <span class="text-sm font-medium">Our Latest Articles</span>
      </div>
      <h1 class="text-5xl font-bold text-secondary-900 dark:text-white mb-6">
        Exploring Technology & AI
      </h1>
      <p class="text-xl text-secondary-600 dark:text-secondary-400 max-w-2xl mx-auto">
        Discover insights at the intersection of artificial intelligence, technology, and innovation
      </p>
    </header>

    <!-- Move search above featured posts -->
    <div class="max-w-3xl mx-auto mb-16">
      <div
        class="flex flex-col sm:flex-row gap-4 bg-white dark:bg-secondary-800 p-4 rounded-2xl shadow-sm"
      >
        <div class="relative flex-1">
          <span
            class="absolute inset-y-0 left-0 flex items-center pl-3 text-secondary-400"
            set:html={icons.search}
          />
          <input
            type="search"
            id="blog-search-input"
            placeholder="Search articles..."
            class="w-full pl-10 pr-4 py-3 border border-secondary-200 dark:border-secondary-700 rounded-xl bg-white dark:bg-secondary-800 text-secondary-900 dark:text-white focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-shadow"
          />
          <div
            id="blog-search-results"
            class="absolute left-0 right-0 top-full mt-2 bg-white dark:bg-secondary-800 rounded-xl shadow-lg border border-secondary-200 dark:border-secondary-700 max-h-96 overflow-y-auto z-10"
          >
          </div>
        </div>
        <div class="flex items-center gap-3">
          <select
            id="category-select"
            class="border border-secondary-200 dark:border-secondary-700 rounded-xl bg-white dark:bg-secondary-800 text-secondary-900 dark:text-white px-4 py-3 min-w-[160px] focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-shadow"
          >
            <option value="">All Categories</option>
            {
              categories.map((category) => (
                <option value={category.toLowerCase()}>{category}</option>
              ))
            }
          </select>
          <a
            href="/rss.xml"
            class="inline-flex items-center justify-center w-12 h-12 border border-secondary-200 dark:border-secondary-700 rounded-xl hover:bg-secondary-50 dark:hover:bg-secondary-800 transition-colors"
            title="RSS Feed"
          >
            <span class="text-secondary-400" set:html={icons.rss} />
          </a>
        </div>
      </div>
    </div>

    <!-- Featured Posts with improved layout -->
    <section class="mb-16">
      <h2
        class="text-2xl font-bold text-secondary-900 dark:text-white mb-8 flex items-center gap-2"
      >
        <span set:html={icons.article} class="text-primary-600 dark:text-primary-400" />
        Featured Articles
      </h2>
      <div class="grid lg:grid-cols-3 gap-8">
        {
          featuredPosts.map((post, index) => (
            <article
              class:list={[
                'bg-white dark:bg-secondary-800 rounded-2xl shadow-sm overflow-hidden hover:shadow-md transition-all duration-300',
                index === 0 ? 'lg:col-span-2 lg:row-span-2' : '',
              ]}
            >
              {post.data.image && (
                <div class="aspect-video w-full overflow-hidden">
                  {typeof post.data.image === 'string' ? (
                    <img
                      src={post.data.image}
                      alt={post.data.title}
                      class="w-full h-full object-cover"
                    />
                  ) : (
                    <Image
                      src={post.data.image}
                      alt={post.data.title}
                      width={400}
                      height={225}
                      class="w-full h-full object-cover"
                    />
                  )}
                </div>
              )}
              <div class="p-6">
                <h3 class="text-xl font-bold text-secondary-900 dark:text-white mb-2">
                  <a
                    href={`/blog/${post.slug}`}
                    class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors"
                  >
                    {post.data.title}
                  </a>
                </h3>
                <p class="text-secondary-600 dark:text-secondary-400 mb-4 line-clamp-2">
                  {post.data.description}
                </p>
                <div class="flex items-center gap-4 text-sm text-secondary-500 dark:text-secondary-400">
                  <span class="flex items-center gap-1">
                    <span set:html={icons.calendar} class="w-4 h-4" />
                    {new Date(post.data.pubDate).toLocaleDateString('en-US', {
                      year: 'numeric',
                      month: 'short',
                      day: 'numeric',
                    })}
                  </span>
                  <span class="flex items-center gap-1">
                    <span set:html={icons.clock} class="w-4 h-4" />
                    {post.data.readingTime}
                  </span>
                </div>
              </div>
            </article>
          ))
        }
      </div>
    </section>

    <!-- Tag Cloud with improved styling -->
    <section class="mb-16 bg-white dark:bg-secondary-800 rounded-2xl p-6 shadow-sm">
      <TagCloud tags={allTags} />
    </section>

    <!-- All Posts with pagination -->
    <section>
      <h2 class="text-2xl font-bold text-secondary-900 dark:text-white mb-8">All Articles</h2>
      <div class="blog-grid grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {
          paginatedPosts.map((post) => (
            <BlogCard
              title={post.data.title}
              description={post.data.description}
              pubDate={post.data.pubDate}
              author={post.data.author}
              slug={post.slug}
              image={post.data.image}
              readingTime={post.data.readingTime}
              category={post.data.category}
              class="blog-card"
              data-category={post.data.category.toLowerCase()}
            />
          ))
        }
      </div>
      <InfiniteScroll totalPages={totalPages} currentPage={currentPage} />
    </section>
  </div>
</MainLayout>

<script>
  import { initializeBlogSearch, initializeCategoryFilter } from '../../scripts/search';
  import { initializeSearchIndex } from '../../utils/searchIndex';

  document.addEventListener('DOMContentLoaded', async () => {
    await initializeSearchIndex();
    initializeBlogSearch();
    initializeCategoryFilter();
  });
</script>
