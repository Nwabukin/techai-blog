---
import MainLayout from '../../../layouts/MainLayout.astro';
import BlogCard from '../../../components/BlogCard.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog', ({ data }) => !data.draft);
  const tags = [...new Set(posts.flatMap((post) => post.data.tags))];

  return tags.map((tag) => ({
    params: { tag: tag.toLowerCase() },
    props: { tag, posts },
  }));
}

const { tag, posts } = Astro.props;

// Filter posts by tag
const tagPosts = posts.filter((post) =>
  post.data.tags.map((t: string) => t.toLowerCase()).includes(tag.toLowerCase())
);

// Sort posts by date
const sortedPosts = tagPosts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<MainLayout title={`${tag} Posts - Tech AI Blog`} description={`Articles tagged with ${tag}`}>
  <section class="max-w-6xl mx-auto px-4 py-12">
    <div class="text-center mb-12">
      <h1 class="text-4xl font-bold text-secondary-900 dark:text-white mb-4">
        Posts tagged with "{tag}"
      </h1>
      <p class="text-lg text-secondary-600 dark:text-secondary-400">
        {tagPosts.length}
        {tagPosts.length === 1 ? 'article' : 'articles'} found
      </p>
    </div>

    <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
      {
        sortedPosts.map((post) => (
          <BlogCard
            title={post.data.title}
            description={post.data.description}
            pubDate={post.data.pubDate}
            author={post.data.author}
            slug={post.slug}
            image={post.data.image}
            readingTime={post.data.readingTime}
            category={post.data.category}
          />
        ))
      }
    </div>
  </section>
</MainLayout>

